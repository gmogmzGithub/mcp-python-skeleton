[tox]
# pre-commit will fail if any changes are made
envlist =
    py312
    pre-commit
# We do not publish an sdist for deployables so there is no need for tox to worry about this.
skipsdist = True

[testenv]
# Format with newlines is used to maintain compatibility between tox 3 and tox 4
passenv =
    COVERAGE_*
    PYTEST_*

# We're using Poetry to manage dependencies
allowlist_externals = poetry
setenv =
    POETRY_VIRTUALENVS_CREATE = false
    VIRTUAL_ENV = {envdir}
# {posargs} means that arguments passed to tox will be forwarded to pytest.
commands =
    poetry install --with test
    poetry run pytest -p no:ddtrace -p no:ddtrace.pytest_benchmark -p no:ddtrace.pytest_bdd {posargs}

[testenv:pre-commit]
# This will fail if any changes would be made to your project by the specified hooks
deps =
    pre-commit

commands =
    pre-commit run --all-files

[testenv:debug]
# Use this environment (with -e) when attaching a debugger
setenv =
    PYTEST_ADDOPTS = --no-cov

[coverage:report]
show_missing = True
precision = 2
# Set your target coverage here. Remove this line to never fail for coverage.
fail_under = 0

[coverage:run]
# You can uncomment this line to exclude files and directories from coverage calculations.
# omit = mcpskeleton/daemon/implementation.py
source = mcpskeleton
branch = True

[pytest]
testpaths = mcpskeleton/tests
addopts =
    --cov
    --cov-config=tox.ini
    --cov-report=term
    # Output coverage.xml report which GitLab uses to display coverage info.
    --cov-report=xml
    # A more human-readable report will be available in the htmlcov folder.
    --cov-report=html
    # There can be many warnings in the libraries used by the daemon which clutter the output of pytest
    # and make the results less readable.
    --disable-pytest-warnings

[flake8]
# Set max-line-length to black compatible 88
max-line-length = 120
# Ignore flake8 warnings E203 and W503 that conflict with black formatting.
extend-ignore = E203, W503
exclude =
  */*_pb2.py
  */*_pb2_grpc.py
